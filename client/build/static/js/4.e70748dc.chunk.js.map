{"version":3,"sources":["pages/CollectionPage/CollectionPage.jsx","pages/CollectionPage/CollectionPageContainer.jsx","redux/shop/shop.selectors.js","components/WithPreloader/WithPreloader.jsx","components/CollectionItem/CollectionItem.jsx"],"names":["connect","state","ownProps","collection","selectCollection","match","params","collectionId","to","title","items","className","PageTitle","map","item","CollectionItem","key","id","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionsLoaded","CollectionPageContainer","compose","WithPreloader","CollectionPage","selectShop","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","collectionUrlParm","selectCollectionPending","isPending","WrappedComponent","otherProps","dispatch","addItem","imageUrl","name","price","style","backgroundImage","onClick","inverted"],"mappings":"mPAmCeA,G,OAAAA,aAJS,SAACC,EAAOC,GAAR,MAAsB,CAC5CC,WAAYC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAGpDD,EAxBQ,SAAC,GAAkB,IAAjBG,EAAgB,EAAhBA,WACvB,IAAKA,EACH,OAAO,kBAAC,IAAD,CAAUK,GAAG,eAFiB,IAI/BC,EAAiBN,EAAjBM,MAAOC,EAAUP,EAAVO,MACf,OACA,6BAASC,UAAU,mBACjB,kBAACC,EAAA,EAAD,CAAWH,MAAK,kBAAaA,KAC7B,yBAAKE,UAAU,oBAEXD,EAAMG,KAAI,SAAAC,GAAI,OACZ,kBAACC,EAAA,EAAD,CACEC,IAAKF,EAAKG,GACVH,KAAMA,aChBZI,EAAkBC,YAAyB,CAC/CC,UAAW,SAAAnB,GAAK,OAAKoB,YAA0BpB,MAG3CqB,EAA0BC,YAC9BvB,YAAQkB,GACRM,IAF8BD,CAG9BE,GAEaH,a,gCCjBf,oJAEMI,EAAa,SAAAzB,GAAK,OAAIA,EAAM0B,MAErBC,EAAoBC,YACjC,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKG,eAGAC,EAA8BF,YAC3C,CAACD,IACD,SAAAE,GAAW,OACXA,EAAcE,OAAOC,KAAKH,GAAajB,KAAI,SAAAG,GAAG,OAAIc,EAAYd,MAAQ,MAGzDZ,EAAmB,SAAA8B,GAAiB,OACjDL,YACE,CAACD,IACD,SAAAE,GAAW,OAAIA,EAAcA,EAAYI,GAAqB,SAGnDC,EAA0BN,YACrC,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKS,aAGFf,EAA4BQ,YACvC,CAACH,IACD,SAAAC,GAAI,QAAMA,EAAKG,gB,oEChBFN,IATO,SAAAa,GAAgB,OAAI,YAAmC,IAAhCjB,EAA+B,EAA/BA,UAAckB,EAAiB,6BAC1E,OAAOlB,EAEL,kBAAC,IAAD,MAEF,kBAACiB,EAAsBC,M,gCCRzB,4CAgCetC,gBAAQ,MAJI,SAAAuC,GAAQ,MAAK,CACtCC,QAAS,SAAA1B,GAAI,OAAIyB,EAASC,YAAQ1B,QAGrBd,EA1BQ,SAAC,GAAuB,IAArBc,EAAoB,EAApBA,KAAM0B,EAAc,EAAdA,QACtBC,EAA0B3B,EAA1B2B,SAAUC,EAAgB5B,EAAhB4B,KAAMC,EAAU7B,EAAV6B,MACxB,OACE,yBACEhC,UAAU,mBACV,yBACEA,UAAU,mBACViC,MAAO,CACLC,gBAAgB,OAAD,OAASJ,EAAT,QAGnB,yBAAK9B,UAAU,qBACb,0BAAMA,UAAU,QAAQ+B,GACxB,0BAAM/B,UAAU,SAAhB,SAA0BgC,IAE5B,kBAAC,IAAD,CACEG,QAAS,kBAAMN,EAAQ1B,IACvBiC,UAAQ,GAFV","file":"static/js/4.e70748dc.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { selectCollection } from '../../redux/shop/shop.selectors';\n\nimport PageTitle from '../../components/PageTitle/PageTitle';\nimport CollectionItem from '../../components/CollectionItem/CollectionItem';\n\nimport './CollectionPage.scss';\n\nconst CollectionPage = ({collection}) => {\n  if (!collection) {\n    return <Redirect to='/not-found' />;\n  }\n  const { title, items } = collection;\n  return (\n  <section className='collection-page'>\n    <PageTitle title={`Royalty ${title}`} />\n    <div className='collection-items'>\n      {\n        items.map(item => (\n          <CollectionItem \n            key={item.id} \n            item={item} />\n        ))\n      }\n    </div>\n  </section>\n)};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);\n","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport { compose } from 'redux';\n\nimport WithPreloader from '../../components/WithPreloader/WithPreloader';\nimport CollectionPage from './CollectionPage';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: state => !selectIsCollectionsLoaded(state)\n})\n\nconst CollectionPageContainer = compose(\n  connect(mapStateToProps), \n  WithPreloader\n)(CollectionPage);\n\nexport default CollectionPageContainer;\n","import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n[selectShop],\nshop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n[selectCollections],\ncollections => \ncollections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = collectionUrlParm => \ncreateSelector(\n  [selectCollections],\n  collections => collections ? collections[collectionUrlParm] : null\n);\n\nexport const selectCollectionPending = createSelector(\n  [selectShop],\n  shop => shop.isPending\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collections\n);\n","import React from 'react';\nimport Preloader from '../Preloader/Preloader';\n\nconst WithPreloader = WrappedComponent => ({ isLoading, ...otherProps }) => {\n  return isLoading ? \n  (\n    <Preloader />\n  ) : (\n  <WrappedComponent { ...otherProps }/>\n  )\n}\n\nexport default WithPreloader;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport CtaButton from '../CtaButton/CtaButton';\nimport { addItem } from '../../redux/cart/cart.actions';\n\nconst CollectionItem = ({ item, addItem }) => {\n  const { imageUrl, name, price } = item;\n  return (\n    <div \n      className='collection-item'>\n      <div\n        className='background-image'\n        style={{\n          backgroundImage: `url(${imageUrl})`\n        }}\n      />\n      <div className='collection-footer'>\n        <span className='name'>{name}</span>\n        <span className='price'>â‚¬{price}</span>\n      </div>\n      <CtaButton \n        onClick={() => addItem(item)}\n        inverted>Add to Cart</CtaButton>\n    </div>\n  )\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n})\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n"],"sourceRoot":""}