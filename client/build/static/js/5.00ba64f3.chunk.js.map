{"version":3,"sources":["components/CollectionPreview/CollectionPreview.jsx","components/CollectionsOverview/CollectionsOverview.jsx","components/CollectionsOverview/CollectionsOverviewContainer.jsx","redux/shop/shop.selectors.js","components/WithPreloader/WithPreloader.jsx","components/CollectionItem/CollectionItem.jsx"],"names":["React","memo","withRouter","title","items","history","match","routeName","className","role","onClick","push","path","filter","item","idx","map","CollectionItem","key","id","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","PageTitle","otherCollectionProps","isLoading","selectCollectionPending","CollectionsOverviewContainer","compose","WithPreloader","CollectionsOverview","selectShop","state","shop","selectCollections","createSelector","Object","keys","selectCollection","collectionUrlParm","isPending","selectIsCollectionsLoaded","WrappedComponent","otherProps","dispatch","addItem","imageUrl","name","price","style","backgroundImage","inverted"],"mappings":"6OA2BeA,MAAMC,KAAKC,aArBA,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,MAAOC,EAAhC,EAAgCA,UAAhC,OACxB,6BAASC,UAAU,sBACjB,wBACEA,UAAU,mBACVC,KAAK,OACLC,QAAS,kBAAML,EAAQM,KAAR,UAAgBL,EAAMM,KAAtB,YAA8BL,MAAeJ,EAC5D,2CACA,kBAAC,IAAD,CAAWK,UAAU,oBACvB,6BAASA,UAAU,WAChBJ,EACES,QAAO,SAACC,EAAMC,GAAP,OAAeA,EAAM,KAC5BC,KAAI,SAAAF,GAAI,OACP,kBAACG,EAAA,EAAD,CACEC,IAAKJ,EAAKK,GACVL,KAAMA,aCEZM,EAAkBC,YAAyB,CAC/CC,YAAaC,MAGAC,cAAQJ,EAARI,EAjBa,SAAC,GAAD,IAAGF,EAAH,EAAGA,YAAH,OAC1B,6BAASd,UAAU,wBACjB,kBAACiB,EAAA,EAAD,CAAWtB,MAAO,wBAEhBmB,EAAYN,KAAI,gBAAGG,EAAH,EAAGA,GAAOO,EAAV,6BACd,kBAAC,EAAD,eACER,IAAKC,GACAO,WCRTN,EAAkBC,YAAyB,CAC/CM,UAAWC,MAGPC,EAA+BC,YACnCN,YAAQJ,GACRW,IAFmCD,CAGnCE,GAEaH,a,gCCjBf,oJAEMI,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YACjC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKb,eAGAC,EAA8Bc,YAC3C,CAACD,IACD,SAAAd,GAAW,OACXA,EAAcgB,OAAOC,KAAKjB,GAAaN,KAAI,SAAAE,GAAG,OAAII,EAAYJ,MAAQ,MAGzDsB,EAAmB,SAAAC,GAAiB,OACjDJ,YACE,CAACD,IACD,SAAAd,GAAW,OAAIA,EAAcA,EAAYmB,GAAqB,SAGnDb,EAA0BS,YACrC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKO,aAGFC,EAA4BN,YACvC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKb,gB,oEChBFS,IATO,SAAAa,GAAgB,OAAI,YAAmC,IAAhCjB,EAA+B,EAA/BA,UAAckB,EAAiB,6BAC1E,OAAOlB,EAEL,kBAAC,IAAD,MAEF,kBAACiB,EAAsBC,M,gCCRzB,4CAgCerB,gBAAQ,MAJI,SAAAsB,GAAQ,MAAK,CACtCC,QAAS,SAAAjC,GAAI,OAAIgC,EAASC,YAAQjC,QAGrBU,EA1BQ,SAAC,GAAuB,IAArBV,EAAoB,EAApBA,KAAMiC,EAAc,EAAdA,QACtBC,EAA0BlC,EAA1BkC,SAAUC,EAAgBnC,EAAhBmC,KAAMC,EAAUpC,EAAVoC,MACxB,OACE,yBACE1C,UAAU,mBACV,yBACEA,UAAU,mBACV2C,MAAO,CACLC,gBAAgB,OAAD,OAASJ,EAAT,QAGnB,yBAAKxC,UAAU,qBACb,0BAAMA,UAAU,QAAQyC,GACxB,0BAAMzC,UAAU,SAAhB,SAA0B0C,IAE5B,kBAAC,IAAD,CACExC,QAAS,kBAAMqC,EAAQjC,IACvBuC,UAAQ,GAFV","file":"static/js/5.00ba64f3.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport CollectionItem from '../CollectionItem/CollectionItem';\nimport { ReactComponent as Underline } from '../../assets/underline.svg';\n\nconst CollectionPreview = ({title, items, history, match, routeName }) => (\n  <section className='collection-preview'>\n    <h2 \n      className='collection-title'\n      role='link'\n      onClick={() => history.push(`${match.path}/${routeName}`)}>{title}\n      <span>See more</span></h2>\n      <Underline className='title-underline'/>\n    <section className='preview'>\n      {items\n        .filter((item, idx) => idx < 4)\n        .map(item => (\n          <CollectionItem \n            key={item.id} \n            item={item} />\n        ))\n      }\n    </section>\n  </section>\n);\n\nexport default React.memo(withRouter(CollectionPreview));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\n\nimport PageTitle from '../PageTitle/PageTitle';\nimport CollectionPreview from '../CollectionPreview/CollectionPreview';\n\nconst CollectionsOverview = ({ collections }) => (\n  <section className='collections-overview'>\n    <PageTitle title={'Royalty Collections'} />\n    {\n      collections.map(({ id, ...otherCollectionProps }) => (\n        <CollectionPreview \n          key={id} \n          { ...otherCollectionProps }/>\n      ))\n    }\n  </section>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollectionsForPreview\n});\n\nexport default connect(mapStateToProps)(CollectionsOverview);\n","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCollectionPending } from '../../redux/shop/shop.selectors';\nimport { compose } from 'redux';\n\nimport WithPreloader from '../WithPreloader/WithPreloader';\nimport CollectionsOverview from './CollectionsOverview';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectCollectionPending\n})\n\nconst CollectionsOverviewContainer = compose(\n  connect(mapStateToProps), \n  WithPreloader\n)(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;\n","import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n[selectShop],\nshop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n[selectCollections],\ncollections => \ncollections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = collectionUrlParm => \ncreateSelector(\n  [selectCollections],\n  collections => collections ? collections[collectionUrlParm] : null\n);\n\nexport const selectCollectionPending = createSelector(\n  [selectShop],\n  shop => shop.isPending\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collections\n);\n","import React from 'react';\nimport Preloader from '../Preloader/Preloader';\n\nconst WithPreloader = WrappedComponent => ({ isLoading, ...otherProps }) => {\n  return isLoading ? \n  (\n    <Preloader />\n  ) : (\n  <WrappedComponent { ...otherProps }/>\n  )\n}\n\nexport default WithPreloader;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport CtaButton from '../CtaButton/CtaButton';\nimport { addItem } from '../../redux/cart/cart.actions';\n\nconst CollectionItem = ({ item, addItem }) => {\n  const { imageUrl, name, price } = item;\n  return (\n    <div \n      className='collection-item'>\n      <div\n        className='background-image'\n        style={{\n          backgroundImage: `url(${imageUrl})`\n        }}\n      />\n      <div className='collection-footer'>\n        <span className='name'>{name}</span>\n        <span className='price'>â‚¬{price}</span>\n      </div>\n      <CtaButton \n        onClick={() => addItem(item)}\n        inverted>Add to Cart</CtaButton>\n    </div>\n  )\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n})\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n"],"sourceRoot":""}