{"version":3,"sources":["components/ErrorMessage/ErrorMessage.js","components/FormInput/FormInput.jsx","components/SignIn/SignIn.jsx","components/Register/Register.jsx","pages/LoginPage/LoginPage.jsx"],"names":["ErrorMessage","children","className","React","memo","label","error","handleChange","otherProps","value","email","onChange","length","SignIn","handleSubmit","e","a","preventDefault","state","password","emailSignInStart","props","setState","emailErr","passwordErr","target","name","this","googleSignInStart","onSubmit","type","required","CtaButton","onClick","Component","connect","dispatch","Register","displayName","confirmPassword","signUpStart","displayNameErr","userCredentials","LoginPage","PageTitle","title"],"mappings":"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","file":"static/js/8.086f09f6.chunk.js","sourcesContent":["import React from 'react';\n\nconst ErrorMessage = ({ children }) => {\n  return (\n    <p className='warning-message'>{children}</p>\n  );\n}\n\nexport default ErrorMessage;\n","import React from 'react';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\n\nconst FormInput = ({ label, error, handleChange, ...otherProps}) => {\n  return (\n    <div className='group'>\n      <input \n        className='form-input'\n        value={ otherProps.email } \n        onChange={ handleChange }\n        { ...otherProps } />\n        {\n          label ? \n          (<label className={`${ otherProps.value.length ? 'shrink' : '' } form-input-label`}>\n            {label}\n          </label>)\n          : null\n        }\n        {\n          error ?\n          (\n            <ErrorMessage>{error}</ErrorMessage>\n          )\n          : null\n        }\n    </div>\n  );\n}\n\nexport default React.memo(FormInput);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../../components/FormInput/FormInput';\nimport CtaButton from '../../components/CtaButton/CtaButton';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nclass SignIn extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      emailErr: '',\n      password: '',\n      passwordErr: ''\n    }\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    const { emailSignInStart } = this.props;\n\n    if (!email) {\n      this.setState({ emailErr: 'Please enter your Email to continue' });\n      return;\n    }\n\n    if (!password) {\n      this.setState({ passwordErr: 'Please enter your Email to continue' });\n      return;\n    }\n\n    this.setState({\n      emailErr: '',\n      passwordErr: ''\n    })\n    emailSignInStart(email, password);\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value})\n  }\n\n  render() {\n    const { \n      email,\n      emailErr,\n      password,\n      passwordErr\n    } = this.state;\n    const { googleSignInStart } = this.props;\n\n    return (\n      <section className='sign-in'>\n        <h2 className='title'>I already have an account</h2>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={ this.handleSubmit }>\n          <FormInput \n            label='Email'\n            error={emailErr}\n            name='email' \n            type='email' \n            value={ email } \n            handleChange={ this.handleChange }\n            required />\n          <FormInput \n            label='Password'\n            error={passwordErr}\n            name='password' \n            type='password' \n            value={ password } \n            handleChange={ this.handleChange }\n            required />\n          <div className='buttons'>\n            <CtaButton \n              type='submit'>Sign In</CtaButton>\n            <CtaButton \n              type='button' \n              onClick={googleSignInStart}>Sign in with Google\n            </CtaButton>\n          </div>\n        </form>\n      </section>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../../components/FormInput/FormInput';\nimport CtaButton from '../../components/CtaButton/CtaButton';\n\nimport { signUpStart } from '../../redux/user/user.actions';\n\nclass Register extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      displayName: '',\n      displayNameErr: '',\n      email: '',\n      emailErr: '',\n      password: '',\n      confirmPassword: '',\n      passwordErr: ''\n    }\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const { \n      displayName, \n      email, \n      password, \n      confirmPassword\n    } = this.state;\n\n    const { signUpStart } = this.props;\n\n    if (!displayName) {\n      this.setState({ displayNameErr: 'Please enter your display name to continue' });\n      return;\n    }\n\n    if (!email) {\n      this.setState({ emailErr: 'Please enter your email to continue' });      \n      return;\n    }\n\n    if (password !== confirmPassword) {\n      this.setState({ passwordErr: 'Your passwords do not match' });\n      return;\n    }\n\n    this.setState({\n      displayNameErr: '',\n      emailErr: '',\n      passwordErr: ''\n    });\n    signUpStart({ displayName, email, password });\n\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value})\n  }\n\n  render() {    \n    const { \n      displayName, \n      displayNameErr, \n      email, \n      emailErr, \n      password, \n      confirmPassword, \n      passwordErr \n    } = this.state;\n\n    return (\n      <section className='register'>\n        <h2 className='title'>New to RoyaltyShop?</h2>\n        <span>Register with your email and password</span>\n\n        <form onSubmit={ this.handleSubmit }>\n          <FormInput \n            label='Display Name'\n            error={displayNameErr}\n            name='displayName' \n            type='text' \n            value={ displayName } \n            handleChange={ this.handleChange }\n            required />\n          <FormInput \n            label='Email'\n            error={emailErr}\n            name='email' \n            type='email' \n            value={ email } \n            handleChange={ this.handleChange }\n            required />\n          <FormInput \n            label='Password'\n            name='password' \n            type='password' \n            value={ password } \n            handleChange={ this.handleChange }\n            required />\n          <FormInput \n            label='Confirm Password'\n            error={passwordErr}\n            name='confirmPassword' \n            type='password' \n            value={ confirmPassword } \n            handleChange={ this.handleChange }\n            required />\n          <div className='buttons'>\n            <CtaButton type='submit'>Register</CtaButton>\n          </div>\n        </form>\n      </section>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(Register);\n","import React from 'react';\n\nimport PageTitle from '../../components/PageTitle/PageTitle';\nimport SignIn from '../../components/SignIn/SignIn';\nimport Register from '../../components/Register/Register';\n\nimport './LoginPage.scss';\n\nclass LoginPage extends React.Component {\n  render() {\n    return (\n      <section className='login-page container'>\n        <PageTitle title={'Sign In!'}/>\n        <div className='login-content'>\n          <SignIn />\n          <Register />\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default LoginPage;\n"],"sourceRoot":""}