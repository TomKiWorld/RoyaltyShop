{"version":3,"sources":["components/CheckOutItem/CheckOutItem.js","components/StripeCheckoutButton/StripeCheckoutButton.jsx","pages/CheckOutPage/CheckOutPage.jsx"],"names":["connect","dispatch","addItem","item","removeItem","clearITeam","clearItemFromCart","cartItem","name","imageUrl","price","quantity","className","src","alt","onClick","StripeCheckoutButton","priceForStripe","label","currency","billingAddress","shippingAddress","image","description","amount","token","axios","url","method","data","then","response","alert","catch","error","console","log","stripeKey","process","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","cartTotal","selectCartTotal","PageTitle","title","map","key","id"],"mappings":"2NAmCeA,cAAQ,MANI,SAAAC,GAAQ,MAAK,CACtCC,QAAS,SAAAC,GAAI,OAAIF,EAASC,YAAQC,KAClCC,WAAY,SAAAD,GAAI,OAAIF,EAASG,YAAWD,KACxCE,WAAY,SAAAF,GAAI,OAAIF,EAASK,YAAkBH,QAGlCH,EA9BM,SAAC,GAAiD,IAAhDO,EAA+C,EAA/CA,SAAUL,EAAqC,EAArCA,QAASE,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,WAC5CG,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAC/B,OACA,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,mBACb,yBAAKC,IAAKJ,EAAUK,IAAG,UAAKN,EAAL,YAEzB,0BAAMI,UAAU,QAAQJ,GACxB,0BAAMI,UAAU,YACd,0BACEA,UAAU,QACVG,QAAS,kBAAKX,EAAWG,KAF3B,UAGA,0BAAMK,UAAU,SAASD,GACzB,0BACEC,UAAU,QACVG,QAAS,kBAAKb,EAAQK,KAFxB,WAIF,0BAAMK,UAAU,SAAhB,SAA0BF,GAC1B,yBACEK,QAAU,kBAAMV,EAAWE,IAC3BK,UAAU,iBAFZ,c,oCCoBWI,EAtCc,SAAC,GAAe,IAAbN,EAAY,EAAZA,MACxBO,EAAyB,IAARP,EAqBvB,OACE,kBAAC,IAAD,CACEQ,MAAM,eACNV,KAAK,cACLW,SAAS,MACTC,gBAAc,EACdC,iBAAe,EACfC,MAAM,iCACNC,YAAW,8BAAoBb,GAC/Bc,OAASP,EACTQ,MA5BY,SAAAA,GACdC,IAAM,CACJC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACJL,OAAQP,EACRQ,WAGHK,MAAK,SAAAC,GACJC,MAAM,yBAEPC,OAAM,SAAAC,GACLC,QAAQC,IAAI,kBAAmBF,GAC/BF,MAAM,gGAeNK,UA/BmBC,iHC2CnBC,G,OAAkBC,YAAyB,CAC/CC,UAAWC,IACXC,UAAWC,OAGE5C,sBAAQuC,EAARvC,EA3CM,SAAC,GAAD,IAAGyC,EAAH,EAAGA,UAAWE,EAAd,EAAcA,UAAd,OACnB,6BAAS/B,UAAU,2BACjB,kBAACiC,EAAA,EAAD,CAAWC,MAAO,aAClB,4BAAQlC,UAAU,mBAChB,yBAAKA,UAAU,gBACb,0CAEF,yBAAKA,UAAU,gBACb,8CAEF,yBAAKA,UAAU,gBACb,2CAEF,yBAAKA,UAAU,gBACb,wCAEF,yBAAKA,UAAU,gBACb,0CAGJ,0BAAMA,UAAU,iBAEZ6B,EAAUM,KAAI,SAAAxC,GAAQ,OACpB,kBAAC,EAAD,CAAcyC,IAAKzC,EAAS0C,GAAI1C,SAAUA,QAIhD,4BAAQK,UAAU,mBAChB,0BAAMA,UAAU,SAAhB,gBAAiC+B,GACjC,kBAAC,EAAD,CAAsBjC,MAAOiC,IAC7B,yBAAK/B,UAAU,mBACb,uFACA","file":"static/js/7.5afd4ddd.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addItem, removeItem, clearItemFromCart } from '../../redux/cart/cart.actions';\n\nconst CheckOutItem = ({cartItem, addItem, removeItem, clearITeam}) => {\n  const { name, imageUrl, price, quantity } = cartItem;\n  return (\n  <div className='checkout-item'>\n    <div className='image-container'>\n      <img src={imageUrl} alt={`${name} item`} />\n    </div>\n    <span className='name'>{name}</span>\n    <span className='quantity'>\n      <span \n        className='arrow'\n        onClick={()=> removeItem(cartItem)}>&#10094;</span>\n      <span className='value'>{quantity}</span>      \n      <span \n        className='arrow'\n        onClick={()=> addItem(cartItem)}>&#10095;</span>\n    </span>\n    <span className='price'>€{price}</span>\n    <div \n      onClick={(() => clearITeam(cartItem))}\n      className='remove-button'>&#10005;</div>\n  </div>\n)};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item)),\n  clearITeam: item => dispatch(clearItemFromCart(item))\n})\n\nexport default connect(null, mapDispatchToProps)(CheckOutItem);\n","import React from 'react';\nimport axios from 'axios';\n\nimport StripeCheckout from 'react-stripe-checkout';\n\nconst StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  const publishableKey = process.env.REACT_APP_STRIPE_API;\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    })\n    .then(response => {\n      alert('Payment successful');\n    })\n    .catch(error => {\n      console.log('Payment error: ', error)\n      alert('There was an issue with your payment! Please make sure you use the provided credit card.');\n    });\n  };\n\n  return (\n    <StripeCheckout \n      label='Payment Info'\n      name='RoyaltyShop'\n      currency='EUR'\n      billingAddress\n      shippingAddress\n      image='https://svgshare.com/i/CUz.svg'\n      description={`Your total is €${price}`}\n      amount={ priceForStripe }\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  )\n}\n\nexport default StripeCheckoutButton;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectCartItems, selectCartTotal } from '../../redux/cart/cart.selectors';\n\nimport PageTitle from '../../components/PageTitle/PageTitle';\nimport CheckOutItem from '../../components/CheckOutItem/CheckOutItem';\nimport StripeCheckoutButton from '../../components/StripeCheckoutButton/StripeCheckoutButton';\n\nimport './CheckOutPage.scss'\n\nconst CheckOutPage = ({ cartItems, cartTotal }) => (\n  <section className='checkout-page container'>\n    <PageTitle title={'Checkout'} />\n    <header className='checkout-header'>\n      <div className='header-block'>\n        <span>Product</span>\n      </div>\n      <div className='header-block'>\n        <span>Description</span>\n      </div>\n      <div className='header-block'>\n        <span>Quantity</span>\n      </div>\n      <div className='header-block'>\n        <span>Price</span>\n      </div>\n      <div className='header-block'>\n        <span>Remove</span>\n      </div>\n    </header>\n    <main className='checkout-main'>\n      {\n        cartItems.map(cartItem => \n          <CheckOutItem key={cartItem.id} cartItem={cartItem} />\n        )\n      }\n    </main>\n    <footer className='checkout-footer'>\n      <span className='total'>Total: €{cartTotal}</span>\n      <StripeCheckoutButton price={cartTotal} />\n      <div className='warning-message'>\n        <p>*Please use the following test credit card for payments*</p>\n        <strong>4242 4242 4242 4242- Exp: 01/22 - CVV 123</strong>\n      </div>\n    </footer>\n  </section>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  cartTotal: selectCartTotal\n});\n\nexport default connect(mapStateToProps)(CheckOutPage);\n"],"sourceRoot":""}