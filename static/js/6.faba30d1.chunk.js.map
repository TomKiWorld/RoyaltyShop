{"version":3,"sources":["components/HeaderBanner/HeaderBanner.jsx","redux/orders/orders.selectors.js","components/DropDownMessage/DropDownMessage.jsx","components/ThankYouTemplate/ThankYouTemplate.jsx","components/ItemDetails/ItemDetails.jsx","components/OrderDetails/OrderDetails.jsx","components/CheckOutItem/CheckOutItem.js","components/StripeCheckoutButton/StripeCheckoutButton.jsx","pages/CheckOutPage/CheckOutPage.jsx"],"names":["HeaderBanner","imageUrl","children","className","style","backgroundImage","selectOrderHistory","state","orderHistory","selectOrdersForPreview","createSelector","orders","getOrdersArrayForPreview","selectCurrentOrder","currentOrder","DropDownMessage","onClose","onClick","withRouter","title","history","dispalyTitle","push","process","ItemDetails","item","name","price","quantity","src","alt","OrderDetails","order","useEffect","tableHeader","document","querySelector","scrollIntoView","id","date","total","orderItems","displayDate","seconds","toDate","toDateString","Date","parse","map","key","connect","dispatch","addItem","removeItem","clearITeam","clearItemFromCart","cartItem","updateOrderInFirebase","setDropdown","useState","loading","setLoading","priceForStripe","Fragment","Preloader","label","currency","billingAddress","shippingAddress","image","description","amount","token","axios","url","method","data","then","response","catch","error","console","log","alert","stripeKey","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","cartTotal","selectCartTotal","currentUser","selectCurrentUser","unsetCurrentOrder","dropdown","PageTitle","CtaButton","ThankYouTemplate","renderDropDown"],"mappings":"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","file":"static/js/6.faba30d1.chunk.js","sourcesContent":["import React from 'react';\n\nconst HeaderBanner = ({ imageUrl, children }) => {\n  return (\n    <div className='header-banner' style={{ backgroundImage: `url(${imageUrl})` }}>\n      {children}\n    </div>\n  );\n}\n\nexport default HeaderBanner;\n","import { createSelector } from 'reselect';\nimport { getOrdersArrayForPreview } from './orders.utils'\n\nconst selectOrderHistory = state => state.orderHistory;\n\nexport const selectOrders = createSelector(\n  [selectOrderHistory],\n  orderHistory => orderHistory.orders\n);\n\nexport const selectOrdersForPreview = createSelector(\n  [selectOrderHistory],\n  orders => getOrdersArrayForPreview(orders)\n);\n\nexport const selectCurrentOrder = createSelector(\n  [selectOrderHistory],\n  orderHistory => orderHistory.currentOrder\n);\n","import React from 'react';\n\nimport './DropDownMessage.scss';\n\nconst DropDownMessage = ({ children, onClose }) => {\n  if (!children) {\n    return null\n  }\n\n  return (\n    <section className='drop-down-message'>\n      <div className='drop-down-message-content'>\n        <span \n          className='drop-down-message-close'\n          onClick={onClose}>&#10005;</span>\n        { children }\n      </div>\n    </section>\n  )\n};\n\nexport default DropDownMessage;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport HeaderBanner from '../HeaderBanner/HeaderBanner';\nimport CtaButton from '../CtaButton/CtaButton';\n\nimport './ThankYouTemplate.scss';\n\nconst PUBLIC_URL = process.env.PUBLIC_URL;\n\nconst ThankYouTemplate = ({ title, imageUrl, children, history }) => {\n  const dispalyTitle = !title ? `For being our customer` : title;\n  return (\n    <div className='thank-you-template'>\n      <HeaderBanner imageUrl={imageUrl}>\n        <div className='thank-you-template-title'>\n          <h2>Thank you</h2>\n          <p>{ dispalyTitle} </p>\n        </div>\n      </HeaderBanner>\n      <p className='warning-message'>Just a reminder, This is a Demo site.</p>\n      {children}\n      <div className='continue-block container'>\n        <div className='continue-block-link'>\n          <p>Continue</p>\n          <CtaButton\n            onClick={() => history.push(`${PUBLIC_URL}/shop`)}\n          >Shopping</CtaButton>\n        </div>\n        <div className='continue-block-link'>\n          <p>Go to</p>\n          <CtaButton\n            onClick={() => history.push(`${PUBLIC_URL}/account`)}\n          >Order History</CtaButton>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default withRouter(ThankYouTemplate);\n","import React from 'react';\n\nconst ItemDetails = ({ item }) => {\n  const { name, imageUrl, price, quantity } = item;\n  return (\n    <div className='item-details'>\n      <div className='image-container'>\n        <img src={imageUrl} alt={`${name} item`} />\n      </div>\n      <span className='name'>{name}</span>\n      <span className='quantity'>{quantity}</span>\n      <span className='price'>â‚¬{price}</span>\n    </div>\n  )\n};\n\nexport default ItemDetails;\n","import React, { useEffect } from 'react';\n\nimport ItemDetails from '../ItemDetails/ItemDetails';\n\nimport './OrderDetails.scss';\n\nconst OrderDetails = ({ order }) => {\n  useEffect(() => {\n    const tableHeader = document.querySelector('.table-header');\n    if (tableHeader) {\n      tableHeader.scrollIntoView();\n    }\n  }, [order]);\n\n  if (!order ) {\n    return null;\n  }\n  const { id, date, total, orderItems } = order;\n  const displayDate = date.seconds ? date.toDate().toDateString() : new Date(Date.parse(date)).toDateString();\n\n  return (\n    <div className='order-details'>\n      <header className='table-header'>\n        <div className='header-block'>\n          <span>Order nr.</span>\n        </div>\n        <div className='header-block'>\n          <span>Date</span>\n        </div>\n        <div className='header-block'>\n          <span>Total</span>\n        </div>\n        <div className='header-block'>\n          <span>Status</span>\n        </div>\n      </header>\n      <main className='table-main'>\n        <div className='order-row'>\n          <span className='id'>{id}</span>\n          <span className='date'>{displayDate}</span>\n          <span className='total'>â‚¬{total}</span>\n          <span className='status'>Processing</span>\n        </div>\n      </main>\n      <div className='status-bar'>\n        <span  className='status-bar-item'>\n          <span className='status-bar-visual'>\n            <span className='status-bar-circle done'></span>\n            <span className='status-bar-strip done'></span>\n          </span>\n          <span className='status-bar-description'>\n            <span className='status-bar-text'>Payment Received</span>\n          </span>\n        </span>\n        <span  className='status-bar-item'>\n          <span className='status-bar-visual'>\n            <span className='status-bar-circle done'></span>\n            <span className='status-bar-strip'></span>\n          </span>\n          <span className='status-bar-description'>\n            <span className='status-bar-text'>Processing</span>\n          </span>\n        </span>\n        <span  className='status-bar-item'>\n          <span className='status-bar-visual'>\n            <span className='status-bar-circle'></span>\n            <span className='status-bar-strip'></span>\n          </span>\n          <span className='status-bar-description'>\n            <span className='status-bar-text'>Out for delivery</span>\n          </span>\n        </span>\n        <span  className='status-bar-item'>\n          <span className='status-bar-visual'>\n            <span className='status-bar-circle'></span>\n          </span>\n          <span className='status-bar-description'>\n            <span className='status-bar-text'>Delivered</span>\n          </span>\n        </span>\n      </div>\n      <div className='container'>\n        <header className='table-header'>\n          <div className='header-block'>\n            <span>Product</span>\n          </div>\n          <div className='header-block'>\n            <span>Description</span>\n          </div>\n          <div className='header-block'>\n            <span>Quantity</span>\n          </div>\n          <div className='header-block'>\n            <span>Price</span>\n          </div>\n        </header>\n        {\n          orderItems.map(item => (\n            <ItemDetails \n              key={item.id} \n              item={item} />\n          ))\n        }\n      </div>\n    </div>\n  )\n};\n\nexport default OrderDetails;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addItem, removeItem, clearItemFromCart } from '../../redux/cart/cart.actions';\n\nconst CheckOutItem = ({ cartItem, addItem, removeItem, clearITeam }) => {\n  const { name, imageUrl, price, quantity } = cartItem;\n  return (\n  <div className='checkout-item'>\n    <div className='image-container'>\n      <img src={imageUrl} alt={`${name} item`} />\n    </div>\n    <span className='name'>{name}</span>\n    <span className='quantity'>\n      <span \n        className='arrow pointer'\n        onClick={()=> removeItem(cartItem)}>&#10094;</span>\n      <span className='value'>{quantity}</span>\n      <span \n        className='arrow pointer'\n        onClick={()=> addItem(cartItem)}>&#10095;</span>\n    </span>\n    <span className='price'>â‚¬{price}</span>\n    <div \n      onClick={(() => clearITeam(cartItem))}\n      className='remove-button pointer'>&#10005;</div>\n  </div>\n)};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item)),\n  clearITeam: item => dispatch(clearItemFromCart(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckOutItem);\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport StripeCheckout from 'react-stripe-checkout';\nimport Preloader from '../Preloader/Preloader';\n\nimport { updateOrderInFirebase } from '../../redux/orders/orders.actions';\n\n\nconst StripeCheckoutButton = ({ price, updateOrderInFirebase, setDropdown }) => {\n  const [loading, setLoading] = useState(false)\n  const priceForStripe = price * 100;\n  const publishableKey = process.env.REACT_APP_STRIPE_API;\n  const onToken = token => {\n    setLoading(true);\n    axios({\n      url: process.env.REACT_APP_SERVER,\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    })\n    .then(response => {\n      updateOrderInFirebase();\n      setLoading(false);\n      setDropdown(true);\n    })\n    .catch(error => {\n      console.log('Payment error: ', error)\n      alert('There was an issue with your payment! Please make sure you use the provided credit card.');\n    });\n  };\n\n  return (\n    <React.Fragment>\n      { loading ? <Preloader /> : null}\n      <StripeCheckout \n      label='Payment Info'\n      name='RoyaltyShop'\n      currency='EUR'\n      billingAddress\n      shippingAddress\n      image='https://svgshare.com/i/CUz.svg'\n      description={`Your total is â‚¬${price}`}\n      amount={ priceForStripe }\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n    </React.Fragment>\n  )\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateOrderInFirebase: () => dispatch(updateOrderInFirebase())\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(StripeCheckoutButton));\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectCartItems, selectCartTotal } from '../../redux/cart/cart.selectors';\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\nimport { unsetCurrentOrder } from '../../redux/orders/orders.actions';\nimport { selectCurrentOrder } from '../../redux/orders/orders.selectors';\n\nimport PageTitle from '../../components/PageTitle/PageTitle';\nimport CheckOutItem from '../../components/CheckOutItem/CheckOutItem';\nimport StripeCheckoutButton from '../../components/StripeCheckoutButton/StripeCheckoutButton';\nimport CtaButton from '../../components/CtaButton/CtaButton';\nimport DropDownMessage from '../../components/DropDownMessage/DropDownMessage';\nimport ThankYouTemplate from '../../components/ThankYouTemplate/ThankYouTemplate';\nimport OrderDetails from '../../components/OrderDetails/OrderDetails';\n\nimport './CheckOutPage.scss';\n\nconst PUBLIC_URL = process.env.PUBLIC_URL;\n\nconst CheckOutPage = ({ cartItems, cartTotal, currentUser, history, currentOrder, unsetCurrentOrder }) => {\n  const [dropdown, setDropdown] = useState(false);\n  useEffect(() => {\n    unsetCurrentOrder();\n  }, [unsetCurrentOrder]);\n\n  const onClose = () => {\n    setDropdown(false);\n    unsetCurrentOrder();\n  }\n\n  const renderDropDown = (dropdown) => {\n    if(!dropdown || !currentOrder) {\n      return null\n    }\n\n    return (\n      <DropDownMessage\n        onClose={onClose}>\n        <ThankYouTemplate \n          imageUrl={`https://images.unsplash.com/photo-1515356619894-b89131037e3d?w=1200&q=100`}\n          title={`For your order`}>\n          <OrderDetails order={currentOrder}/>\n        </ThankYouTemplate>\n      </DropDownMessage>\n    )\n  }\n\n  return (\n    <section className='checkout-page container'>\n      <PageTitle title={'Checkout'} />\n      <header className='table-header'>\n        <div className='header-block'>\n          <span>Product</span>\n        </div>\n        <div className='header-block'>\n          <span>Description</span>\n        </div>\n        <div className='header-block'>\n          <span>Quantity</span>\n        </div>\n        <div className='header-block'>\n          <span>Price</span>\n        </div>\n        <div className='header-block'>\n          <span>Remove</span>\n        </div>\n      </header>\n      <main className='table-main'>\n        {\n          cartItems.map(cartItem => \n            <CheckOutItem key={cartItem.id} cartItem={cartItem} />\n          )\n        }\n      </main>\n      <footer className='table-footer'>\n        <span className='total'>Total: â‚¬{cartTotal}</span>\n        {\n          !currentUser \n          ? \n          <div className='take-action'>\n            <p>Please login to place an order</p>\n            <CtaButton\n              onClick={() => history.push(`${PUBLIC_URL}/signin`)}\n              >Sign in</CtaButton>\n          </div>\n          :\n          <StripeCheckoutButton price={cartTotal} setDropdown={setDropdown} />\n        }\n        <div className='warning-message'>\n          <p>*Please use the following test credit card for payments*</p>\n          <strong>4242 4242 4242 4242- Exp: 01/22 - CVV 123</strong>\n        </div>\n      </footer>\n      { renderDropDown(dropdown) } \n    </section>\n  )\n};\n\nconst mapDispatchToProps = dispatch => ({\n  unsetCurrentOrder: () => dispatch(unsetCurrentOrder())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  cartTotal: selectCartTotal,\n  currentUser: selectCurrentUser,\n  currentOrder: selectCurrentOrder\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckOutPage);\n"],"sourceRoot":""}